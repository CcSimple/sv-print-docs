import{_ as n,W as s,X as a,a1 as t}from"./framework-e97450c6.js";const p={},o=t(`<h3 id="关于插件" tabindex="-1"><a class="header-anchor" href="#关于插件" aria-hidden="true">#</a> 关于插件</h3><p>sv-print 插件是结合 hiprint 底层逻辑。使用 hook 实现的简单插件机。目前提供的 hook 有限。支持如下:</p><div class="custom-container tip"><p class="custom-container-title">温馨提示</p><p>部分 hook 回调的参数不太好 翻译 它的具体作用。请 log 查看。</p></div><table><thead><tr><th>hook</th><th>说明</th><th>回调参数</th><th>备注</th></tr></thead><tbody><tr><td>init</td><td><code>hiprint.register</code> 时的 hook</td><td><code>Config</code><br><code>OptionItems</code><br><code>ElementTypes</code><br><code>hinnn</code><br><code>hiprint</code></td><td>可实现自定义参数</td></tr><tr><td>ready</td><td><code>$(document).ready</code> 时的 hook</td><td><code>p</code><br><code>window</code><br></td><td><code>ready</code> 时处理</td></tr><tr><td>documentShortcutKeys</td><td><code>全局快捷键</code> hook</td><td><code>panel</code><br><code>event</code><br></td><td>自定义全局快捷键<br> 如:<code>Ctrl + 1</code></td></tr><tr><td>shortcutKeys</td><td><code>面板快捷键</code> hook<br><mark>当设计面板获取到焦点时的快捷键</mark></td><td><code>panel</code><br><code>event</code><br></td><td>如:<code>Ctrl + B</code> 将选中元素 字体加粗</td></tr><tr><td>createPrintElement</td><td><code>创建元素</code> hook</td><td><code>Config</code><br><code>BasePrintElement</code><br><code>Options</code><br><code>Supper</code><br><code>ele</code><br><code>eleOpt</code><br></td><td>配合<code>init、beforePrint</code>等 hook 自定义新的元素</td></tr><tr><td>beforePrint</td><td><code>浏览器打印前</code> hook<br> 处理新元素 <code>打印样式</code></td><td><code>template</code><br><code>info</code><br><code>opts</code><br></td><td><mark>返回该 3 个参数</mark></td></tr><tr><td>beforePrint2</td><td><code>直接打印前</code> hook<br> 处理新元素 <code>打印样式</code></td><td><code>template</code><br><code>info</code><br></td><td><mark>返回该 2 个参数</mark></td></tr></tbody></table><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><p>实现新增一个 <mark>缩放</mark> 参数。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> PluginOptions <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;sv-print&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// hook 函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">scale</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> Config<span class="token punctuation">,</span> OptionItems<span class="token punctuation">,</span> hinnn<span class="token punctuation">,</span> hiprint<span class="token punctuation">,</span> name <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Config<span class="token punctuation">.</span><span class="token function">registerItems</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">function</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// json模板 options 对应键值</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">css</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// t: 元素对象， e 参数值</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">&quot;transform&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scale(&quot;</span> <span class="token operator">+</span> e <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">createTarget</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>t<span class="token punctuation">,</span> i<span class="token punctuation">,</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//  t: 元素对象，i: 元素options, e: 元素printElementType</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>target <span class="token operator">=</span> globalThis<span class="token punctuation">.</span><span class="token function">$</span><span class="token punctuation">(</span>
              <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div class=&quot;hiprint-option-item&quot;&gt;\\n        &lt;div class=&quot;hiprint-option-item-label&quot;&gt;\\n        </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
                name <span class="token operator">?</span> name <span class="token operator">:</span> <span class="token string">&quot;缩放&quot;</span>
              <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n        &lt;/div&gt;\\n        &lt;div class=&quot;hiprint-option-item-field&quot;&gt;\\n        &lt;input type=&quot;number&quot; class=&quot;auto-submit&quot;/&gt;\\n        &lt;/div&gt;\\n    &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>target
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getValue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">setValue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//  t: options 对应键的值</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">&quot;input&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span>t<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">destroy</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        t
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// transform 位置 idx</span>
  <span class="token keyword">let</span> idx <span class="token operator">=</span> Config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>supportOptions<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;transform&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 将 scale 插入到 transform 位置后面</span>
  idx <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
    Config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>supportOptions<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">,</span>
      hidden<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 这里是 tabs 分组 的处理。 同上</span>
  <span class="token keyword">const</span> tabIndex <span class="token operator">=</span> Config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>tabs<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;样式&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  tabIndex <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>idx <span class="token operator">=</span> Config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>tabs<span class="token punctuation">[</span>tabIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&quot;transform&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  idx <span class="token operator">&amp;&amp;</span>
    Config<span class="token punctuation">.</span>text<span class="token punctuation">.</span>tabs<span class="token punctuation">[</span>tabIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">,</span>
      hidden<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 这是才是插件 hooks 的实例</span>
<span class="token comment">// 可自定义插入的参数</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>config<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> PluginOptions <span class="token punctuation">{</span>
  <span class="token keyword">let</span> configs <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>config<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">,</span>
    description<span class="token operator">:</span> <span class="token string">&quot;「text」元素 缩放参数&quot;</span><span class="token punctuation">,</span>
    hooks<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// 接受多个 hook 组合</span>
      <span class="token punctuation">{</span>
        hook<span class="token operator">:</span> <span class="token string">&quot;init&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 这是 hook 关键</span>
        name<span class="token operator">:</span> <span class="token string">&quot;scale&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 名称(可选) 暂时没用到这个</span>
        description<span class="token operator">:</span> <span class="token string">&quot;testF&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 描述(可选) 暂时没用到这个</span>
        priority<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 排序优先级 (可选) 暂时没用到这个</span>
        <span class="token comment">// hook</span>
        <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token punctuation">(</span>opts<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span>opts<span class="token punctuation">,</span> <span class="token operator">...</span>configs <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    leastHiprintVersion<span class="token operator">:</span> <span class="token string">&quot;0.1.0&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),e=[o];function c(i,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","intro.html.vue"]]);export{k as default};
