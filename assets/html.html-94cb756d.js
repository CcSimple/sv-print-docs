import{_ as t,W as e,X as d,a1 as r}from"./framework-e97450c6.js";const o={},a=r('<h3 id="printelementtype" tabindex="-1"><a class="header-anchor" href="#printelementtype" aria-hidden="true">#</a> printElementType</h3><div class="custom-container info"><p class="custom-container-title">温馨提示</p><p><mark>printElementType</mark> 是设计 provider 时的重要参数。比如说 <code>tid</code> 和 <code>field</code> 参数</p></div><table><thead><tr><th>名称</th><th>类型</th><th>说明</th><th>备注</th></tr></thead><tbody><tr><td>tid</td><td><code>string</code></td><td>元素类型唯一标识</td><td></td></tr><tr><td>formatter</td><td><code>function</code></td><td>格式化函数 <br><code>同 options 的 formatter</code></td><td><code>优先级高于 options</code><br><mark>无法彻底删除</mark></td></tr><tr><td>onRendered</td><td><code>function</code></td><td>渲染完成回调 <br><mark>只能放在 printElementType 中</mark></td><td><mark>设计时不会触发</mark></td></tr></tbody></table><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><div class="custom-container info"><p class="custom-container-title">温馨提示</p><p>参数过多，可能没有罗列完整。更多参数点击元素后，在<mark>参数面板</mark>中查看。<br><code>如果你是开发者，我相信你知道该怎么看</code>。</p></div><table><thead><tr><th>名称</th><th>类型</th><th>说明</th><th>备注</th></tr></thead></table>',6),n=[a];function c(i,h){return e(),d("div",null,n)}const l=t(o,[["render",c],["__file","html.html.vue"]]);export{l as default};
